<!DOCTYPE html>
<html>
<head>
  <title>Quizz - Mobile </title>
  <%= stylesheet_link_tag    "application", media: "all", "data-turbolinks-track" => true %>
  <%= javascript_include_tag "application", "data-turbolinks-track" => true %>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.css" rel="stylesheet">
  <link href='http://fonts.googleapis.com/css?family=Hammersmith+One&subset=latin,latin-ext' rel='stylesheet' type='text/css'>
  <%= csrf_meta_tags %>

</head>
<body>
<div id="fb-root"></div>


<%= yield %>
<script>

    window.fbAsyncInit = function() {
        FB.init({
            appId      : '573745316055036',
            status     : true, // check login status
            cookie     : true, // enable cookies to allow the server to access the session
            xfbml      : true  // parse XFBML
        });


        // Here we subscribe to the auth.authResponseChange JavaScript event. This event is fired
        // for any authentication related change, such as login, logout or session refresh. This means that
        // whenever someone who was previously logged out tries to log in again, the correct case below
        // will be handled.

        FB.Event.subscribe('auth.authResponseChange', function(response) {
            // Here we specify what we do with the response anytime this event occurs.

            if (response.status === 'connected') {
                // The response object is returned with a status field that lets the app know the current
                // login status of the person. In this case, we're handling the situation where they
                // have logged in to the app.

                if (!window.location.pathname.match(/hall|quizzes/g)) {

                    window.location.href ="/hall/new";
                }



                testAPI(response);
            } else if (response.status === 'not_authorized') {
                // In this case, the person is logged into Facebook, but not into the app, so we call
                // FB.login() to prompt them to do so.
                // In real-life usage, you wouldn't want to immediately prompt someone to login
                // like this, for two reasons:
                // (1) JavaScript created popup windows are blocked by most browsers unless they
                // result from direct interaction from people using the app (such as a mouse click)
                // (2) it is a bad experience to be continually prompted to login upon page load.
                FB.login();
                console.log("not")
            } else {
                // In this case, the person is not logged into Facebook, so we call the login()
                // function to prompt them to do so. Note that at this stage there is no indication
                // of whether they are logged into the app. If they aren't then they'll see the Login
                // dialog right after they log in to Facebook.
                // The same caveats as above apply to the FB.login() call here.
                FB.login();
                console.log("none")
            }
        });
    };

    // Load the SDK asynchronously
    (function(d){
        var js, id = 'facebook-jssdk', ref = d.getElementsByTagName('script')[0];
        if (d.getElementById(id)) {return;}
        js = d.createElement('script'); js.id = id; js.async = true;
        js.src = "//connect.facebook.net/en_US/all.js";
        ref.parentNode.insertBefore(js, ref);
    }(document));

    // Here we run a very simple test of the Graph API after login is successful.
    // This testAPI() function is only called in those cases.
    function testAPI(response) {
        //Fetching FACEBOOK information....
        $('input').fadeOut('fast');

        FB.api('/me', function(response) {

            if (response && !response.error) {
                //Loading profile picture
                var avatar = new Image();
                avatar.onload = function() {
                    $('#user-avatar').attr('src', avatar.src);
                }
                avatar.src = 'https://graph.facebook.com/'+response.id+'/picture?type=normal';

                //Change username
                $('.gm-profile-pic + h2 > strong').text(response.first_name);

                $('input').fadeIn('fast');
            }
        });

    }
    $(document).ready( function(){
        $("#quiz_start").fadeOut('fast')

        $("#newnickname").on('keyup', function(){
            ($(this).val().length > 3)?$("#symbol").val('âœ“'):$("#symbol").val('');
            ($(this).val().length > 3)?$("#quiz_start").fadeIn('fast'):$("#quiz_start").fadeOut('fast');
        });
    });


</script>


</body>
</html>
